#include "initiativetracker.h"
#include <QLineEdit>
#include <QPushButton>
#include <QTextEdit>
#include <algorithm>

// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –Ω–µ –¥–µ–ª–∞–µ—Ç –Ω–∏—á–µ–≥–æ, –∫—Ä–æ–º–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑–æ–≤–æ–≥–æ QObject
InitiativeTracker::InitiativeTracker(QObject* parent)
    : QObject(parent)
{
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–∂–µ—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤
void InitiativeTracker::setupUI(QLineEdit* nameInput,
                                QLineEdit* initiativeInput,
                                QTextEdit* display,
                                QPushButton* addButton,
                                QPushButton* nextButton,
                                QPushButton* previousButton)
{
    nameEdit = nameInput;
    initiativeEdit = initiativeInput;
    displayArea = display;
    addBtn = addButton;
    nextBtn = nextButton;
    prevBtn = previousButton;

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫ –¥–µ–π—Å—Ç–≤–∏—è–º
    connect(addBtn, &QPushButton::clicked, this, &InitiativeTracker::addEntry);
    connect(nextBtn, &QPushButton::clicked, this, &InitiativeTracker::showNext);
    connect(prevBtn, &QPushButton::clicked, this, &InitiativeTracker::showPrevious);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã
void InitiativeTracker::addEntry()
{
    QString name = nameEdit->text().trimmed(); // –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
    bool ok = false;
    int initiative = initiativeEdit->text().toInt(&ok); // –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ

    if (name.isEmpty() || !ok)
        return; // –µ—Å–ª–∏ –∏–º—è –ø—É—Å—Ç–æ–µ –∏–ª–∏ –Ω–µ —á–∏—Å–ª–æ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º

    initiativeList.append(qMakePair(name, initiative)); // –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
    sortInitiativeList();   // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    currentIndex = 0;       // —Å–±—Ä–æ—Å –Ω–∞ –Ω–∞—á–∞–ª–æ
    updateDisplay();        // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–æ–ª–µ
}

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ: –æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É
void InitiativeTracker::sortInitiativeList()
{
    std::sort(initiativeList.begin(), initiativeList.end(),
              [](const QPair<QString, int>& a, const QPair<QString, int>& b) {
                  return a.second > b.second;
              });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã
void InitiativeTracker::updateDisplay()
{
    if (!displayArea) return;

    displayArea->clear();
    for (int i = 0; i < initiativeList.size(); ++i) {
        const auto& pair = initiativeList[i];
        QString line = QString("%1. %2 (%3)") // –ø—Ä–∏–º–µ—Ä: "1. –ê–ª–µ–∫—Å–µ–π (17)"
                           .arg(i + 1)
                           .arg(pair.first)
                           .arg(pair.second);

        if (i == currentIndex) {
            line.prepend("üëâ "); // —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        }

        displayArea->append(line); // –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
    }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É
void InitiativeTracker::showNext()
{
    if (initiativeList.isEmpty()) return;

    currentIndex = (currentIndex + 1) % initiativeList.size();
    updateDisplay();
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É
void InitiativeTracker::showPrevious()
{
    if (initiativeList.isEmpty()) return;

    currentIndex = (currentIndex - 1 + initiativeList.size()) % initiativeList.size();
    updateDisplay();
}
